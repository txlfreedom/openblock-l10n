{
    "arduinoEsp32.InterrupModeMenu.changeEdge": "电平改变触发",
    "arduinoEsp32.InterrupModeMenu.fallingEdge": "下降沿触发",
    "arduinoEsp32.InterrupModeMenu.high": "高电平触发",
    "arduinoEsp32.InterrupModeMenu.low": "低电平触发",
    "arduinoEsp32.InterrupModeMenu.risingEdge": "上升沿触发",
    "arduinoEsp32.category.data": "数据",
    "arduinoEsp32.category.sensor": "传感器",
    "arduinoEsp32.category.serial": "串口",
    "arduinoEsp32.data.dataConstrain": "约束 [DATA] 介于 ([ARG0], [ARG1])",
    "arduinoEsp32.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoEsp32.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoEsp32.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoEsp32.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoEsp32.dataTypeMenu.decimal": "小数",
    "arduinoEsp32.dataTypeMenu.string": "字符串",
    "arduinoEsp32.dataTypeMenu.wholeNumber": "整数",
    "arduinoEsp32.eolMenu.noWarp": "不换行",
    "arduinoEsp32.eolMenu.warp": "换行",
    "arduinoEsp32.levelMenu.high": "高",
    "arduinoEsp32.levelMenu.low": "低",
    "arduinoEsp32.modeMenu.input": "输入",
    "arduinoEsp32.modeMenu.inputPullup": "输入上拉",
    "arduinoEsp32.modeMenu.output": "输出",
    "arduinoEsp32.pins.attachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoEsp32.pins.detachInterrupt": "取消中断引脚 [PIN]",
    "arduinoEsp32.pins.esp32ReadTouchPin": "读取触摸引脚 [PIN]",
    "arduinoEsp32.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "arduinoEsp32.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoEsp32.pins.setServoOutput": "设置舵机引脚 [PIN] 使用通道 [CH] 输出 [OUT]",
    "arduinoEsp32.sensor.readHallSensor": "读取霍尔传感器",
    "arduinoEsp32.sensor.runningTime": "运行时间（毫秒）",
    "arduinoEsp32.serial.multiSerialAvailable": "串口 [NO] 可读取字节数",
    "arduinoEsp32.serial.multiSerialBegin": "串口 [NO] 启动波特率  [VALUE]",
    "arduinoEsp32.serial.multiSerialPrint": "串口 [NO] 打印 [VALUE] [EOL]",
    "arduinoEsp32.serial.multiSerialReadAByte": "串口 [NO] 读取1个字节",
    "arduinoLeonardo.category.data": "数据",
    "arduinoLeonardo.category.pins": "引脚",
    "arduinoLeonardo.data.dataConstrain": "约束[DATA] 介于 ([ARG0], [ARG1])",
    "arduinoLeonardo.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoLeonardo.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoLeonardo.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoLeonardo.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoLeonardo.dataTypeMenu.decimal": "小数",
    "arduinoLeonardo.dataTypeMenu.string": "字符串",
    "arduinoLeonardo.dataTypeMenu.wholeNumber": "整数",
    "arduinoLeonardo.levelMenu.high": "高",
    "arduinoLeonardo.levelMenu.low": "低",
    "arduinoLeonardo.modeMenu.input": "输入",
    "arduinoLeonardo.modeMenu.inputPullup": "输入上拉",
    "arduinoLeonardo.modeMenu.output": "输出",
    "arduinoLeonardo.pins.attachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoLeonardo.pins.detachInterrupt": "取消中断引脚 [PIN]",
    "arduinoLeonardo.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "arduinoLeonardo.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoLeonardo.pins.setDigitalOutput": "设置引脚 [PIN] 输出为 [LEVEL]",
    "arduinoLeonardo.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "arduinoLeonardo.pins.setPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "arduinoLeonardo.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "arduinoMega2560.category.data": "数据",
    "arduinoMega2560.category.pins": "引脚",
    "arduinoMega2560.category.serial": "串口",
    "arduinoMega2560.data.dataConstrain": "约束[DATA] 介于 ([ARG0], [ARG1])",
    "arduinoMega2560.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoMega2560.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoMega2560.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoMega2560.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoMega2560.dataTypeMenu.decimal": "小数",
    "arduinoMega2560.dataTypeMenu.string": "字符串",
    "arduinoMega2560.dataTypeMenu.wholeNumber": "整数",
    "arduinoMega2560.levelMenu.high": "高",
    "arduinoMega2560.levelMenu.low": "低",
    "arduinoMega2560.modeMenu.input": "输入",
    "arduinoMega2560.modeMenu.inputPullup": "输入上拉",
    "arduinoMega2560.modeMenu.output": "输出",
    "arduinoMega2560.pins.attachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoMega2560.pins.detachInterrupt": "取消中断引脚 [PIN]",
    "arduinoMega2560.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "arduinoMega2560.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoMega2560.pins.setDigitalOutput": "设置引脚 [PIN] 输出为 [LEVEL]",
    "arduinoMega2560.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "arduinoMega2560.pins.setPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "arduinoMega2560.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "arduinoMega2560.serial.multiSerialAvailable": "串口 [NO] 可读取字节数",
    "arduinoMega2560.serial.multiSerialBegin": "串口 [NO] 启动波特率  [VALUE]",
    "arduinoMega2560.serial.multiSerialPrint": "串口 [NO] 打印 [VALUE] [EOL]",
    "arduinoMega2560.serial.multiSerialReadAByte": "串口 [NO] 读取1个字节",
    "arduinoPeripheral.connection.connectFirmataTimeout": "尝试连接 firmata 超时, 请先下载固件",
    "arduinoUno.InterrupModeMenu.changeEdge": "电平改变触发",
    "arduinoUno.InterrupModeMenu.fallingEdge": "下降沿触发",
    "arduinoUno.InterrupModeMenu.low": "低电平触发",
    "arduinoUno.InterrupModeMenu.risingEdge": "上升沿触发",
    "arduinoUno.category.data": "数据",
    "arduinoUno.category.pins": "引脚",
    "unoCore.InterrupModeMenu.changeEdge": "电平改变触发",
    "unoCore.InterrupModeMenu.fallingEdge": "下降沿触发",
    "unoCore.InterrupModeMenu.low": "低电平触发",
    "unoCore.InterrupModeMenu.risingEdge": "上升沿触发",
    "unoCore.category.data": "数据操作",
    "unoCore.category.pins": "接口操作",
    "unoCore.category.serial": "串口操作",
    "unoCore.category.motor": "电机",
    "unoCore.data.dataConstrain": "约束[DATA] 介于(最小值)[ARG0]和(最大值)[ARG1]",
    "unoCore.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "unoCore.data.numConvert": "将数字 [DATA] 转换为字符串",
    "unoCore.data.stringConvert": "将字符串 [DATA] 转换为 [TYPE]",
    "unoCore.data.dataConvertASCIICharacter": "将数字 [DATA] 转换为 ASCII 字符串",
    "unoCore.data.dataConvertASCIINumber": "将字符 [DATA] 转换为 ASCII 数值",
    "unoCore.data.numRetain": "[DATA] 保留 [BIT] 位小数",
    "unoCore.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "unoCore.dataTypeMenu.integer": "整数",
    "unoCore.dataTypeMenu.decimal": "小数",
    "unoCore.dataTypeMenu.string": "字符串",
    "unoCore.dataTypeMenu.wholeNumber": "整数",
    "unoCore.eolMenu.noWarp": "不换行",
    "unoCore.eolMenu.warp": "换行",
    "unoCore.printMenu.string":"字符串输出",
    "unoCore.printMenu.hex":"十六进制输出",
    "unoCore.printMenu.original":"字节输出",
    "unoCore.levelMenu.high": "高电平",
    "unoCore.levelMenu.low": "低电平",
    "unoCore.modeMenu.input": "输入",
    "unoCore.modeMenu.inputPullup": "输入上拉",
    "unoCore.modeMenu.output": "输出",
    "unoCore.pins.attachInterrupt": "设置中断接口 P5 模式 [MODE] 执行",
    "unoCore.pins.detachInterrupt": "取消中断接口 P5",
    "unoStart.pins.attachInterrupt": "设置中断引脚 3 模式 [MODE] 执行",
    "unoStart.pins.detachInterrupt": "取消中断引脚 3",
    "unoCore.pins.readAnalogPin": "读取接口 [PIN] 模拟量",
    "unoCore.pins.readDigitalPin": "接口 [PIN] 为 [LEVEL]",
    "unoCore.pins.readDigitalPinNum": "读取接口 [PIN] 数字量",
    "unoStart.pins.readAnalogPin": "读取引脚 [PIN] 模拟量",
    "unoStart.pins.readDigitalPin": "引脚 [PIN] 为 [LEVEL]",
    "unoStart.pins.readDigitalPinNum": "读取引脚 [PIN] 数字量",
    "unoCore.pins.setDigitalOutput": "设置接口 [PIN] 输出为 [LEVEL]",
    "unoCore.pins.setPinMode": "设置接口 [PIN] 模式 [MODE]",
    "unoCore.pins.setPwmOutput": "设置 PWM 引脚 [PIN] 输出 [OUT]",
    "unoCore.pins.setInterfacePwmOutput": "设置 PWM 接口 [PIN] 输出 [OUT]",
    "unoCore.pins.setServoOutput": "设置舵机接口 [PIN] 输出 [OUT]",
    "unoCore.serial.serialAvailable": "串口可读取字节数",
    "unoCore.serial.isSerialAvailable": "串口有数据可读？",
    "unoCore.serial.serialBegin": "串口启动波特率  [VALUE]",
    "unoCore.serial.serialPrint": "串口 [TYPE] [VALUE] [EOL]",
    "unoCore.serial.serialReadData": "从串口读取一个 [TYPE]",
    "unoCore.motor.run":"设置电机接口 [MOTOR] 以 [SPEED] 速度 [ROTATE]",
    "unoCore.motor.brake":"设置电机接口 [MOTOR] 刹车",
    "unoCore.motor.stop":"设置电机接口 [MOTOR] 停止",
    "unoCore.clockwiseMenu.clockwise":"顺时针旋转",
    "unoCore.clockwiseMenu.anticlockwise":"逆时针旋转",
    "unoCore.numtypeMenu.int":"整数",
    "unoCore.numtypeMenu.float":"小数",
    "arduinoUno.category.serial": "串口",
    "arduinoUno.data.dataConstrain": "约束[DATA] 介于 ([ARG0], [ARG1])",
    "arduinoUno.data.dataConvert": "转换 [DATA] 为 [TYPE]",
    "arduinoUno.data.dataConvertASCIICharacter": "转换 [DATA] 为 ASCII 字符",
    "arduinoUno.data.dataConvertASCIINumber": "转换 [DATA] 为 ASCII 编码",
    "arduinoUno.data.dataMap": "映射 [DATA] 从 ([ARG0], [ARG1]) 到 ([ARG2], [ARG3])",
    "arduinoUno.dataTypeMenu.decimal": "小数",
    "arduinoUno.dataTypeMenu.string": "字符串",
    "arduinoUno.dataTypeMenu.wholeNumber": "整数",
    "arduinoUno.eolMenu.noWarp": "不换行",
    "arduinoUno.eolMenu.warp": "换行",
    "arduinoUno.levelMenu.high": "高",
    "arduinoUno.levelMenu.low": "低",
    "arduinoUno.modeMenu.input": "输入",
    "arduinoUno.modeMenu.inputPullup": "输入上拉",
    "arduinoUno.modeMenu.output": "输出",
    "arduinoUno.pins.attachInterrupt": "设置中断引脚 [PIN] 模式 [MODE] 执行",
    "arduinoUno.pins.detachInterrupt": "取消中断引脚 [PIN]",
    "arduinoUno.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "arduinoUno.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "arduinoUno.pins.setDigitalOutput": "设置引脚 [PIN] 输出为 [LEVEL]",
    "arduinoUno.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "arduinoUno.pins.setPwmOutput": "设置引脚 [PIN] pwm为 [OUT]",
    "arduinoUno.pins.setServoOutput": "设置舵机引脚 [PIN] 输出 [OUT]",
    "arduinoUno.serial.serialAvailable": "串口可读取字节数",
    "arduinoUno.serial.serialBegin": "串口启动波特率  [VALUE]",
    "arduinoUno.serial.serialPrint": "串口打印 [VALUE] [EOL]",
    "arduinoUno.serial.serialReadData": "串口读取数据",
    "boost.color.any": "任何颜色",
    "boost.color.black": "黑色",
    "boost.color.blue": "蓝色",
    "boost.color.green": "绿色",
    "boost.color.red": "黄色",
    "boost.color.white": "白色",
    "boost.color.yellow": "黄色",
    "boost.getMotorPosition": "马达 [MOTOR_REPORTER_ID] 位置",
    "boost.getTiltAngle": "向[TILT_DIRECTION]倾角",
    "boost.motorDirection.backward": "逆时针",
    "boost.motorDirection.forward": "顺时针",
    "boost.motorDirection.reverse": "反转",
    "boost.motorOff": "关闭马达 [MOTOR_ID]",
    "boost.motorOn": "开启马达 [MOTOR_ID]",
    "boost.motorOnFor": "使马达 [MOTOR_ID]转动 [DURATION] 秒",
    "boost.motorOnForRotation": "使马达 [MOTOR_ID]转动 [ROTATION] 圈",
    "boost.seeingColor": "看到 [COLOR]积木 ?",
    "boost.setLightHue": "将灯光颜色设为[HUE]",
    "boost.setMotorDirection": "将马达[MOTOR_ID] 方向设为 [MOTOR_DIRECTION]",
    "boost.setMotorPower": "将马达 [MOTOR_ID] 速度设为 [POWER]%",
    "boost.tiltDirection.any": "任意方向",
    "boost.tiltDirection.down": "下",
    "boost.tiltDirection.left": "左",
    "boost.tiltDirection.right": "右",
    "boost.tiltDirection.up": "上",
    "boost.whenColor": "当看到[COLOR]积木",
    "boost.whenTilted": "当向[TILT_DIRECTION_ANY]倾斜",
    "esp32Arduino.category.pins": "引脚",
    "esp32Arduino.pins.esp32SetDACOutput": "设置 dac 引脚 [PIN] 输出 [OUT]",
    "esp32Arduino.pins.esp32SetPwmOutput": "设置 pwm 引脚 [PIN] 使用通道 [CH] 输出 [OUT]",
    "esp32Arduino.pins.setDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "esp32Arduino.pins.setPinMode": "设置引脚 [PIN] 模式 [MODE]",
    "ev3.beepNote": "鸣笛[NOTE][TIME]秒",
    "ev3.buttonPressed": "按下按钮[PORT]？",
    "ev3.getBrightness": "亮度",
    "ev3.getDistance": "距离",
    "ev3.getMotorPosition": "马达[PORT]的位置",
    "ev3.motorSetPower": "马达[PORT]功率设为[POWER]%",
    "ev3.motorTurnClockwise": "马达[PORT]正转[TIME]秒",
    "ev3.motorTurnCounterClockwise": "马达[PORT]反转[TIME]秒",
    "ev3.whenBrightnessLessThan": "当亮度 < [DISTANCE]",
    "ev3.whenButtonPressed": "当按下按钮[PORT]",
    "ev3.whenDistanceLessThan": "当距离 < [DISTANCE]",
    "gdxfor.getAcceleration": "向[DIRECTION]的加速度",
    "gdxfor.getForce": "受力",
    "gdxfor.getSpin": "向[DIRECTION]的旋转速度",
    "gdxfor.getTilt": "向[TILT]倾角",
    "gdxfor.isFreeFalling": "自由落体？",
    "gdxfor.isTilted": "向[TILT]倾斜？",
    "gdxfor.pulled": "拉扯",
    "gdxfor.pushed": "挤压",
    "gdxfor.shaken": "被晃动",
    "gdxfor.startedFalling": "开始自由落体",
    "gdxfor.tiltDirectionMenu.any": "任意方向",
    "gdxfor.tiltDirectionMenu.back": "后",
    "gdxfor.tiltDirectionMenu.front": "前",
    "gdxfor.tiltDirectionMenu.left": "左",
    "gdxfor.tiltDirectionMenu.right": "右",
    "gdxfor.turnedFaceDown": "正面向下",
    "gdxfor.turnedFaceUp": "正面向上",
    "gdxfor.whenForcePushedOrPulled": "当力传感器被[PUSH_PULL]",
    "gdxfor.whenGesture": "当传感器[GESTURE]",
    "gdxfor.whenTilted": "当向[TILT]倾斜",
    "makeymakey.downArrow": "↓",
    "makeymakey.downArrowShort": "下",
    "makeymakey.leftArrow": "←",
    "makeymakey.leftArrowShort": "左",
    "makeymakey.rightArrow": "→",
    "makeymakey.rightArrowShort": "右",
    "makeymakey.spaceKey": "空格",
    "makeymakey.upArrow": "↑",
    "makeymakey.upArrowShort": "上",
    "makeymakey.whenKeyPressed": "当按下 [KEY] 键",
    "makeymakey.whenKeysPressedInOrder": "当依次按下[SEQUENCE]键时",
    "microbit.axisMenu.xAxis": "x轴",
    "microbit.axisMenu.yAxis": "y轴",
    "microbit.axisMenu.zAxis": "z轴",
    "microbit.buttonsMenu.any": "任意",
    "microbit.category.console": "控制台",
    "microbit.category.display": "显示",
    "microbit.category.pins": "引脚",
    "microbit.category.sensor": "传感器",
    "microbit.category.wireless": "无线",
    "microbit.clearDisplay": "清空屏幕",
    "microbit.console.consolePrint": "打印 [TEXT]",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.display.clearDisplay": "清空屏幕",
    "microbit.display.lightPixelAt": "[STATE] 在坐标 x: [X] , y: [Y] ",
    "microbit.display.show": "显示 [TEXT]",
    "microbit.display.showImage": "显示图案 [VALUE]",
    "microbit.display.showImageUntil": "显示图案 [VALUE] 持续 [TIME] 秒",
    "microbit.display.showOnPiexlbrightness": "设置坐标 x: [X], y: [Y] 的亮度为 [BRT]",
    "microbit.display.showUntilScrollDone": "显示 [TEXT] 直到滚动结束",
    "microbit.displaySymbol": "显示[MATRIX]",
    "microbit.displayText": "显示文本[TEXT]",
    "microbit.gestruesMenu.faceDown": "正面朝下",
    "microbit.gestruesMenu.faceUp": "正面朝上",
    "microbit.gestruesMenu.freefall": "自由下落",
    "microbit.gestruesMenu.shaken": "被摇晃",
    "microbit.gestruesMenu.tiltedDownward": "向下倾斜",
    "microbit.gestruesMenu.tiltedLeftward": "向左倾斜",
    "microbit.gestruesMenu.tiltedRightward": "向右倾斜",
    "microbit.gestruesMenu.tiltedUpward": "向上倾斜",
    "microbit.gesturesMenu.jumped": "抛起",
    "microbit.gesturesMenu.moved": "移动",
    "microbit.gesturesMenu.shaken": "晃动",
    "microbit.isButtonPressed": "按下[BTN]按钮？",
    "microbit.isTilted": "向[DIRECTION]倾斜？",
    "microbit.ledState.off": "熄灭",
    "microbit.ledState.on": "点亮",
    "microbit.levelMenu.high": "高",
    "microbit.levelMenu.low": "低",
    "microbit.pinStateMenu.off": "低电平",
    "microbit.pinStateMenu.on": "高电平",
    "microbit.pins.pinIsTouched": "引脚 [PIN] 被触摸",
    "microbit.pins.readAnalogPin": "读取模拟引脚 [PIN]",
    "microbit.pins.readDigitalPin": "读取数字引脚 [PIN]",
    "microbit.pins.setDigitalOutput": "设置引脚 [PIN] 输出 [LEVEL]",
    "microbit.pins.setPwmOutput": "设置 pwm 引脚 [PIN] 输出 [OUT]",
    "microbit.sensor.axisAcceleration": "[AXIS] 轴加速度",
    "microbit.sensor.buttonIsPressed": "按键 [KEY] 被按下?",
    "microbit.sensor.calibrateCompass": "校准指南针",
    "microbit.sensor.compassAngle": "指南针角度",
    "microbit.sensor.compassMagneticDensity": "指南针磁场强度",
    "microbit.sensor.gestureIsX": "姿态是 [STA]?",
    "microbit.sensor.lightLevel": "亮度",
    "microbit.sensor.runningTime": "运行时间",
    "microbit.sensor.temperature": "温度",
    "microbit.tiltAngle": "向[DIRECTION]倾角",
    "microbit.tiltDirectionMenu.any": "任意",
    "microbit.tiltDirectionMenu.back": "后",
    "microbit.tiltDirectionMenu.front": "前",
    "microbit.tiltDirectionMenu.left": "左",
    "microbit.tiltDirectionMenu.right": "右",
    "microbit.whenButtonPressed": "当按下[BTN]按钮",
    "microbit.whenGesture": "当被[GESTURE]",
    "microbit.whenPinConnected": "当引脚[PIN]接地",
    "microbit.whenTilted": "当向[DIRECTION]倾斜",
    "microbit.wireless.closeWirelessCommunication": "关闭无线通讯",
    "microbit.wireless.openWirelessCommunication": "打开无线通讯",
    "microbit.wireless.receiveWirelessMessage": "收到无线消息",
    "microbit.wireless.resetWirelessCommunication": "复位无线通讯",
    "microbit.wireless.sendWirelessMessage": "发送无线消息 [TEXT]",
    "microbit.wireless.setWirelessCommunicationChannel": "设置无线通讯频道为 [CH]",
    "music.categoryName": "音乐",
    "music.changeTempo": "将演奏速度增加[TEMPO]",
    "music.drumBass": "(2) 低音鼓",
    "music.drumBongo": "(13) 邦戈鼓",
    "music.drumCabasa": "(15) 卡巴萨",
    "music.drumClaves": "(9) 音棒",
    "music.drumClosedHiHat": "(6) 闭击踩镲",
    "music.drumConga": "(14) 康加鼓",
    "music.drumCowbell": "(11) 牛铃",
    "music.drumCrashCymbal": "(4) 碎音钹",
    "music.drumCuica": "(18) 锯加鼓",
    "music.drumGuiro": "(16) 刮瓜",
    "music.drumHandClap": "(8) 手掌",
    "music.drumOpenHiHat": "(5) 开击踩镲",
    "music.drumSideStick": "(3) 敲鼓边",
    "music.drumSnare": "(1) 小军鼓",
    "music.drumTambourine": "(7) 铃鼓",
    "music.drumTriangle": "(12) 三角铁",
    "music.drumVibraslap": "(17) 颤音器",
    "music.drumWoodBlock": "(10) 木鱼",
    "music.getTempo": "演奏速度",
    "music.instrumentBass": "(6) 贝斯",
    "music.instrumentBassoon": "(14) 巴松管",
    "music.instrumentCello": "(8) 大提琴",
    "music.instrumentChoir": "(15) 唱诗班",
    "music.instrumentClarinet": "(10) 单簧管",
    "music.instrumentElectricGuitar": "(5) 电吉他",
    "music.instrumentElectricPiano": "(2) 电钢琴",
    "music.instrumentFlute": "(12) 长笛",
    "music.instrumentGuitar": "(4) 吉他",
    "music.instrumentMarimba": "(19) 马林巴琴",
    "music.instrumentMusicBox": "(17) 八音盒",
    "music.instrumentOrgan": "(3) 风琴",
    "music.instrumentPiano": "(1) 钢琴",
    "music.instrumentPizzicato": "(7) 拨弦",
    "music.instrumentSaxophone": "(11) 萨克斯管",
    "music.instrumentSteelDrum": "(18) 钢鼓",
    "music.instrumentSynthLead": "(20) 合成主音",
    "music.instrumentSynthPad": "(21) 合成柔音",
    "music.instrumentTrombone": "(9) 长号",
    "music.instrumentVibraphone": "(16) 颤音琴",
    "music.instrumentWoodenFlute": "(13) 木长笛",
    "music.midiPlayDrumForBeats": "击打 [DRUM] [BEATS] 拍",
    "music.midiSetInstrument": "将乐器设为 [INSTRUMENT]",
    "music.playDrumForBeats": "击打 [DRUM] [BEATS] 拍",
    "music.playNoteForBeats": "演奏音符[NOTE][BEATS]拍",
    "music.restForBeats": "休止[BEATS]拍",
    "music.setInstrument": "将乐器设为 [INSTRUMENT]",
    "music.setTempo": "将演奏速度设定为[TEMPO]",
    "pen.categoryName": "画笔",
    "pen.changeColorParam": "将笔的 [COLOR_PARAM] 增加[VALUE]",
    "pen.changeHue": "将笔的颜色增加[HUE]",
    "pen.changeShade": "将笔的亮度增加[SHADE]",
    "pen.changeSize": "将笔的粗细增加[SIZE]",
    "pen.clear": "全部擦除",
    "pen.colorMenu.brightness": "亮度",
    "pen.colorMenu.color": "颜色",
    "pen.colorMenu.saturation": "饱和度",
    "pen.colorMenu.transparency": "透明度",
    "pen.penDown": "落笔",
    "pen.penUp": "抬笔",
    "pen.setColor": "将笔的颜色设为[COLOR]",
    "pen.setColorParam": "将笔的 [COLOR_PARAM] 设为[VALUE]",
    "pen.setHue": "将笔的颜色设为[HUE]",
    "pen.setShade": "将笔的亮度设为[SHADE]",
    "pen.setSize": "将笔的粗细设为[SIZE]",
    "pen.stamp": "图章",
    "speech.defaultWhenIHearValue": "开始",
    "speech.extensionName": "语音识别",
    "speech.listenAndWait": "听候语音输入",
    "speech.speechReporter": "语音输入",
    "speech.whenIHear": "当听到[PHRASE]",
    "text2speech.alto": "中音",
    "text2speech.categoryName": "文字朗读",
    "text2speech.defaultTextToSpeak": "你好",
    "text2speech.giant": "巨人",
    "text2speech.kitten": "小猫",
    "text2speech.setLanguageBlock": "将朗读语言设置为[LANGUAGE]",
    "text2speech.setVoiceBlock": "使用 [VOICE] 嗓音",
    "text2speech.speakAndWaitBlock": "朗读 [WORDS]",
    "text2speech.squeak": "尖细",
    "text2speech.tenor": "男高音",
    "translate.categoryName": "翻译",
    "translate.defaultTextToTranslate": "你好",
    "translate.translateBlock": "将 [WORDS] 译为 [LANGUAGE]",
    "translate.viewerLanguage": "访客语言",
    "videoSensing.categoryName": "视频侦测",
    "videoSensing.direction": "方向",
    "videoSensing.motion": "运动",
    "videoSensing.off": "关闭",
    "videoSensing.on": "开启",
    "videoSensing.onFlipped": "镜像开启",
    "videoSensing.setVideoTransparency": "将视频透明度设为[TRANSPARENCY]",
    "videoSensing.sprite": "角色",
    "videoSensing.stage": "舞台",
    "videoSensing.videoOn": "相对于[SUBJECT]的视频[ATTRIBUTE]",
    "videoSensing.videoToggle": "[VIDEO_STATE]摄像头",
    "videoSensing.whenMotionGreaterThan": "当视频运动 > [REFERENCE]",
    "wedo2.getDistance": "距离",
    "wedo2.getTiltAngle": "向[TILT_DIRECTION]倾角",
    "wedo2.isTilted": "向[TILT_DIRECTION_ANY]倾斜？",
    "wedo2.motorDirection.backward": "逆时针",
    "wedo2.motorDirection.forward": "顺时针",
    "wedo2.motorDirection.reverse": "反转",
    "wedo2.motorId.a": "马达A",
    "wedo2.motorId.all": "所有马达",
    "wedo2.motorId.b": "马达B",
    "wedo2.motorId.default": "马达",
    "wedo2.motorOff": "关闭[MOTOR_ID]",
    "wedo2.motorOn": "开启[MOTOR_ID]",
    "wedo2.motorOnFor": "开启[MOTOR_ID][DURATION]秒",
    "wedo2.playNoteFor": "演奏音符[NOTE][DURATION]秒",
    "wedo2.setLightHue": "将灯光颜色设为[HUE]",
    "wedo2.setMotorDirection": "将[MOTOR_ID]转向设为[MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "将[MOTOR_ID]功率设为[POWER]",
    "wedo2.tiltDirection.any": "任意方向",
    "wedo2.tiltDirection.down": "下",
    "wedo2.tiltDirection.left": "左",
    "wedo2.tiltDirection.right": "右",
    "wedo2.tiltDirection.up": "上",
    "wedo2.whenDistance": "当距离[OP][REFERENCE]",
    "wedo2.whenTilted": "当向[TILT_DIRECTION_ANY]倾斜"
}